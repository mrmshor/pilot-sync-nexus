name: Build Native Mac Desktop App

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build React application (offline mode)
      run: |
        # Build for offline desktop app
        NODE_ENV=production npm run build
        
    - name: Setup Capacitor for native Mac app
      run: |
        npx cap add ios
        npx cap sync ios
        
        # Configure for native desktop app (not web app)
        echo "Configuring native Mac desktop application..."
        
        # Configure Info.plist for standalone desktop app
        /usr/libexec/PlistBuddy -c "Set :LSUIElement false" ios/App/App/Info.plist || true
        /usr/libexec/PlistBuddy -c "Set :LSApplicationCategoryType public.app-category.productivity" ios/App/App/Info.plist || true
        /usr/libexec/PlistBuddy -c "Set :NSSupportsAutomaticTermination true" ios/App/App/Info.plist || true
        /usr/libexec/PlistBuddy -c "Set :NSSupportsSuddenTermination true" ios/App/App/Info.plist || true
        /usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName מערכת ניהול פרויקטים Pro" ios/App/App/Info.plist || true
        
        # Remove web-specific settings
        /usr/libexec/PlistBuddy -c "Delete :NSAppTransportSecurity" ios/App/App/Info.plist || true
        
    - name: Create export options for native app
      run: |
        cat > ios/export-options.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>mac-application</string>
            <key>destination</key>
            <string>export</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>thinning</key>
            <string>&lt;none&gt;</string>
        </dict>
        </plist>
        EOF
        
    - name: Build native Mac desktop application
      run: |
        cd ios/App
        
        # Build true native Mac desktop application
        xcodebuild -workspace App.xcworkspace \
                   -scheme App \
                   -destination 'generic/platform=macOS,variant=Mac Catalyst' \
                   -configuration Release \
                   -archivePath "../../build/App.xcarchive" \
                   clean archive \
                   CODE_SIGN_IDENTITY="" \
                   CODE_SIGNING_REQUIRED=NO \
                   CODE_SIGNING_ALLOWED=NO \
                   SUPPORTS_MACCATALYST=YES \
                   TARGETED_DEVICE_FAMILY="1,2,6" \
                   DEVELOPMENT_TEAM="" \
                   PROVISIONING_PROFILE_SPECIFIER="" \
                   ENABLE_BITCODE=NO
                   
    - name: Export native desktop application
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath "../build/App.xcarchive" \
                   -exportPath "../build/export" \
                   -exportOptionsPlist export-options.plist
                   
    - name: Create DMG installer for desktop app
      run: |
        # Create DMG staging directory
        mkdir -p dmg-staging
        
        # Find and copy the native app
        find build/export -name "*.app" -type d | head -1 | while read app_path; do
          echo "Found native app: $app_path"
          cp -R "$app_path" dmg-staging/
          
          # Rename to Hebrew name for desktop
          app_name=$(basename "$app_path")
          mv "dmg-staging/$app_name" "dmg-staging/מערכת ניהול פרויקטים Pro.app"
          echo "Created native desktop app: מערכת ניהול פרויקטים Pro.app"
        done
        
        # Verify native app exists
        if [ ! -d "dmg-staging/מערכת ניהול פרויקטים Pro.app" ]; then
          echo "Error: Native desktop app not found"
          ls -la build/export/
          exit 1
        fi
        
        # Create native desktop app DMG
        hdiutil create -volname "מערכת ניהול פרויקטים Pro - Native Desktop" \
                       -srcfolder dmg-staging \
                       -ov -format UDZO \
                       -fs HFS+ \
                       "ProjectManager-Native-macOS.dmg"
                       
        # Verify DMG was created
        ls -lh ProjectManager-Native-macOS.dmg
        
    - name: Upload native desktop DMG
      uses: actions/upload-artifact@v4
      with:
        name: ProjectManager-Native-macOS-Desktop
        path: ProjectManager-Native-macOS.dmg
        retention-days: 30
        
    - name: Debug - List all files
      if: failure()
      run: |
        echo "=== Build directory ==="
        find build -type f -name "*.app" 2>/dev/null || echo "No .app files found in build"
        echo "=== Export directory ==="  
        find build/export -type d -name "*.app" 2>/dev/null || echo "No .app directories found"